/*Remember: in CSS, every element rests within a series of boxes.
These boxes are defined from inside to outside: content, padding, border, margin.
*/

html,body{
	/* height: 100% for the ryanfait sticky footer */
	height: 100%;
}

body{
	font-family: 'Arial', 'Helvetica Neue', Helvetica, sans-serif;
	color: #777777;
}

.wrapper{
	min-height: 100%;
	/*don't forget: use !important to override every other
	instance where this particular attribute is defined! Use Sparingly! */
/*
	height: auto !important;
	height: 100%;
*/
	/*used -66px here because the footer height is 66px*/
	margin: 0 auto -66px;
}

header{
	background-color: #ffffff;
	border-bottom-width:2px;
	border-bottom-style: solid;
	border-bottom-color: #cccccc;
	margin-top: 30px;
	/* in order for the header footer to display correctly, this
	height must equal the height of the "my-name" div!*/
	height: 82px;
}

/* may also define attributes for multiple classes/ids at once, separated by commas:
eg p, h1, h2, #my-name {} */
h1, h2, h3{
	/* font-family may hold several font names. If the browser
	does not support the first font, it tries the next font.
	Start with the font you want, and always end with a generic
	family (such as "serif", "sans-serif", "cursive), to let the
	browser pick a similar font in the generic family.*/
	/* use "font:" to set all the font properties in one declaration.
	font: font-style font-variant font-weight font-size/line-height font-family;*/
	font-family:'Georgia', Times, 'Times New Roman', serif;
	color: #4aaaa5;
}

#my-name{
	font-family:'Georgia', Times, 'Times New Roman', serif;
	font-size: 28px;
	/*font-weight: 400 is normal, 700 is bold */
	font-weight: 700;
	/*color defines the text color*/
	color: white;
	text-align: center;
	/*background color defines the content color*/
	background-color:#4aaaa5;
	/*"padding:" may have 1 - 4 values (units of px). If four values,
	values define top, right, bottom, and left padding.
	If three values, values define top padding, right & left padding,
	and bottom padding.
	If two values, values define top & bottom padding, and right
	and left padding.
	If one value, the value defines padding for all four sides. */
	padding:25px;
	border-radius: 7px 7px 0px 0px;
	margin-left: 100px;
	float:left;
}

#page-links-nav{
	font-family:'Arial', 'Helvetica Neue', Helvetica, sans-serif;
    font-size: 17px;
    color: #777777;
    padding: 35px 0px 25px 35px;
    overflow: hidden;
    float: left;
    margin-right: 100px;
    margin-left: 395px;
}

.nav-link{
	padding: 10px;
	border-radius:8px;
}

.nav-link:hover{
	background-color: lime;
}

/* for the navigation menu, use the following code if you want to use an
unordered list with a float.

#page-links-menu{
	font-family:'Arial', 'Helvetica Neue', Helvetica, sans-serif;
    list-style-type: none;
    margin: 0;
    padding: 0;
    overflow: hidden;
    background-color: #FFFFFF;
}

li {
    float: left;
}

li a {
	/* "display: inline" displays a list of links as a horizontal menu
    display: inline-block;
    color: #777777;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
}

li a:hover {
    background-color: lime;
}
*/

.middle-section{
	background-image: url("../images/gray_jean.png");
}

.main-content{
	width:650px;
	font-size:18px;
	background-color:#ffffff;
	padding: 15px 25px 25px 25px;
	/* border: width style color; */
	border:1px solid #cccccc;
	border-radius: 7px;
	margin-top:30px;
	margin-left: 100px;	
	float: left;
}

#photo-jonathon{
	width: 125px;
	margin: 0px 20px 0px 0px;
	float: left;
}

#second-paragraph{
}

#contact-me{
	width: 270px;
	font-size: 15px;
	text-align: center;
	background-color:#ffffff;
	padding:5px 0px 15px 0px;
	border:1px solid #cccccc;
	border-radius:7px;
	margin-top:30px;
	margin-right: 100px;
	margin-left:40px;
	float: left;
}

.logo-link{
	width: 55px;
	margin: 5px;
}

#logo-link-linkedinsmaller{
	width: 65px;
}

.portfolio-links-line{
	margin-top: 25px;
	margin-bottom: 30px;
}

.new-image-link-column1{
	width: 290px;
	height: 193.333px;
	position: relative;
	float:left;
}

.new-image-link-column2{
	width: 290px;
	height: 193.333px;
	position: relative;
	margin-left:30px;
	margin-bottom:45px;
	float:left;
}

.portfolio-project-photo{
	position: relative;
	width: 100%;
}

.portfolio-link-banner{
	position:absolute;
	top:110px;
	left: 0;
/*	width should be 100% according to
	https://css-tricks.com/text-blocks-over-image/*/
	width: 290px;
	font-size: 25px;
	color:white;
	text-align: center;
/*	these rgba values correspond to background-color: #4aaaa5*/
	background: rgba(74,170,165,0.57);
	padding: 10px;
}

form{
	font-size:19px;
}

input[type="text"]{
	height: 25px;
	/* defining width as 100% makes the input field width as
	wide as the form */
	width: 100%;
	font-size:22px;
	display:block;
	margin-right:0px;
}

input[type="tel"]{
	height: 25px;
	font-size:22px;
}

textarea{
	font-size:22px;
	height: 275px;
	width: 95%;
}

input[type="submit"] {
    font-size: 20px;
    color:white;
	background-color:#4aaaa5;
    padding:11px;
    border-radius: 7px;
}

/* required for the ryanfait sticky footer. Defining the
push class height as anything greater than the footer height
ensures the content above the footer is (this height - footer height)
above the footer. However, if you want the content above the footer
to end directly flush with with top of the footer, this height
should equal the footer height. */
footer, .push{
	clear:both;
	/*height: 66px;*/
	height: 66px;
}

#main-footer{
	font-family: 'Arial', 'Helvetica Neue', Helvetica, sans-serif;
	font-size: 10px;
	color: white;
	text-align: center;
	background-color: #666666;
	padding: 25px;
	clear: both;
	border-top: 5px solid #4aaaa5;
}